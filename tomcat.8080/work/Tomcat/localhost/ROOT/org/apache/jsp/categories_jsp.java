/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-03-22 14:24:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import uk.ac.ucl.model.domain.Note;

public final class categories_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("uk.ac.ucl.model.domain.Note");
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/meta.jsp", out, false);
      out.write("\n");
      out.write("  <title>Note Categories</title>\n");
      out.write("  <style>\n");
      out.write("    .categories-container { max-width: 800px; margin: 20px auto; }\n");
      out.write("    .category-list { list-style: none; padding: 0; }\n");
      out.write("    .category-item { margin-bottom: 10px; padding: 15px; border: 1px solid #ddd; background: #f9f9f9; }\n");
      out.write("    .category-name { font-size: 1.2em; font-weight: bold; }\n");
      out.write("    .create-form { margin: 20px 0; padding: 15px; border: 1px solid #ddd; background: #f5f5f5; }\n");
      out.write("    .form-title { margin-top: 0; }\n");
      out.write("    .form-row { margin: 10px 0; }\n");
      out.write("    input[type=\"text\"] { padding: 8px; width: 300px; }\n");
      out.write("    .button { padding: 8px 15px; }\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\n");
      out.write("<div class=\"main\">\n");
      out.write("  <div class=\"categories-container\">\n");
      out.write("    <h2>Note Categories</h2>\n");
      out.write("\n");
      out.write("    <div class=\"create-form\">\n");
      out.write("      <h3 class=\"form-title\">Create New Category</h3>\n");
      out.write("      <form method=\"post\" action=\"categories.html\">\n");
      out.write("        <div class=\"form-row\">\n");
      out.write("          <label for=\"categoryName\">Category Name:</label>\n");
      out.write("          <input type=\"text\" id=\"categoryName\" name=\"categoryName\" required>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"form-row\">\n");
      out.write("          <input type=\"submit\" value=\"Create Category\" class=\"button\">\n");
      out.write("        </div>\n");
      out.write("      </form>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <h3>Existing Categories</h3>\n");
      out.write("\n");
      out.write("    ");

      List<Note> categories = (List<Note>) request.getAttribute("categories");
      if (categories == null || categories.isEmpty()) {
    
      out.write("\n");
      out.write("    <p>No categories have been created yet.</p>\n");
      out.write("    ");
 } else { 
      out.write("\n");
      out.write("    <ul class=\"category-list\">\n");
      out.write("      ");
 for (Note category : categories) { 
      out.write("\n");
      out.write("      <li class=\"category-item\">\n");
      out.write("        <div class=\"category-name\">\n");
      out.write("          <a href=\"category.html?id=");
      out.print( category.getId() );
      out.write('"');
      out.write('>');
      out.print( category.getHeader() );
      out.write("</a>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"category-meta\">\n");
      out.write("          Created: ");
      out.print( category.getCreationDate() );
      out.write("\n");
      out.write("        </div>\n");
      out.write("      </li>\n");
      out.write("      ");
 } 
      out.write("\n");
      out.write("    </ul>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    <p><a href=\"noteIndex.html\">Back to Note Index</a></p>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/footer.jsp", out, false);
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
