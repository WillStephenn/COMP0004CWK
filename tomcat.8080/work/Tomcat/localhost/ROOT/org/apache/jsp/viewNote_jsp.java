/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-03-22 15:33:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import uk.ac.ucl.model.domain.Note;
import java.util.ArrayList;

public final class viewNote_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("uk.ac.ucl.model.domain.Note");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/meta.jsp", out, false);
      out.write("\n");
      out.write("  <title>View Note</title>\n");
      out.write("  <style>\n");
      out.write("    .note-container { padding: 20px; margin: 20px 0; border: 1px solid #ddd; }\n");
      out.write("    .note-header { font-size: 1.5em; margin-bottom: 10px; }\n");
      out.write("    .note-metadata { color: #666; font-size: 0.9em; margin-bottom: 15px; }\n");
      out.write("    .note-content { margin: 15px 0; line-height: 1.5; }\n");
      out.write("    .note-url { margin: 10px 0; }\n");
      out.write("    .note-image { max-width: 100%; margin: 10px 0; }\n");
      out.write("    .categories { margin-top: 15px; }\n");
      out.write("    .category { display: inline-block; background: #f0f0f0; padding: 3px 8px; margin-right: 5px; border-radius: 3px; }\n");
      out.write("    .actions { margin: 20px 0; }\n");
      out.write("    .button { padding: 5px 10px; background: #f0f0f0; border: 1px solid #ccc; text-decoration: none; margin-right: 10px; }\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\n");
      out.write("<div class=\"main\">\n");
      out.write("  ");

    Note note = (Note) request.getAttribute("note");
    if (note != null) {
  
      out.write("\n");
      out.write("  <div class=\"note-container\">\n");
      out.write("    <h1 class=\"note-header\">");
      out.print( note.getHeader() );
      out.write("</h1>\n");
      out.write("\n");
      out.write("    <div class=\"note-metadata\">\n");
      out.write("      Created: ");
      out.print( note.getCreationDate() );
      out.write("<br>\n");
      out.write("      Last Modified: ");
      out.print( note.getLastModifiedDate() );
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    ");
 if (note.hasText()) { 
      out.write("\n");
      out.write("    <div class=\"note-content\">\n");
      out.write("      ");
      out.print( note.getTextContent().replace("\n", "<br>") );
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    ");
 if (note.hasUrl()) { 
      out.write("\n");
      out.write("    <div class=\"note-url\">\n");
      out.write("      <strong>URL:</strong> <a href=\"");
      out.print( note.getUrl() );
      out.write("\" target=\"_blank\">");
      out.print( note.getUrl() );
      out.write("</a>\n");
      out.write("    </div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    ");
 if (note.hasImage()) { 
      out.write("\n");
      out.write("    <div>\n");
      out.write("      <img src=\"");
      out.print( note.getImagePath() );
      out.write("\" alt=\"Note Image\" class=\"note-image\">\n");
      out.write("    </div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    ");
 if (note.getCategories() != null && !note.getCategories().isEmpty()) { 
      out.write("\n");
      out.write("    <div class=\"categories\">\n");
      out.write("      <strong>Categories:</strong>\n");
      out.write("      ");
 for (String categoryId : note.getCategories()) { 
      out.write("\n");
      out.write("      <span class=\"category\">\n");
      out.write("    <a href=\"noteIndex.html?category=");
      out.print( categoryId );
      out.write('"');
      out.write('>');
      out.print( categoryId );
      out.write("</a>\n");
      out.write("  </span>\n");
      out.write("      ");
 } 
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("  <div class=\"actions\">\n");
      out.write("    <a href=\"editNote.html?id=");
      out.print( note.getId() );
      out.write("\" class=\"button\">Edit Note</a>\n");
      out.write("    <a href=\"deleteNote.html?id=");
      out.print( note.getId() );
      out.write("\" class=\"button\">Delete Note</a>\n");
      out.write("    <a href=\"noteIndex.html\" class=\"button\">Back to Index</a>\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("  ");
 } else { 
      out.write("\n");
      out.write("  <p>Note not found.</p>\n");
      out.write("  <a href=\"noteIndex.html\">Back to Index</a>\n");
      out.write("  ");
 } 
      out.write("\n");
      out.write("</div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/footer.jsp", out, false);
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
