[{"id":"e1f2a3b4-c5d6-7e8f-9a0b-1c2d3e4f5a6","header":"Workout Routine","creationDate":"2025-02-01T07:30:00","lastModifiedDate":"2025-03-22T17:55:19.753489","textContent":"Monday: Chest and Triceps\n- Bench Press: 3 sets x 8-10 reps\n- Incline Dumbbell Press: 3 sets x 10 reps\n- Chest Flyes: 3 sets x 12 reps\n- Tricep Pushdowns: 3 sets x 12 reps\n- Overhead Tricep Extension: 3 sets x 10 reps\n\nWednesday: Back and Biceps\n- Pull-ups: 3 sets x 8 reps\n- Bent-over Rows: 3 sets x 10 reps\n- Lat Pulldowns: 3 sets x 10 reps\n- Barbell Curls: 3 sets x 10 reps\n- Hammer Curls: 3 sets x 12 reps\n\nFriday: Legs and Shoulders\n- Squats: 3 sets x 8 reps\n- Leg Press: 3 sets x 10 reps\n- Leg Curls: 3 sets x 12 reps\n- Shoulder Press: 3 sets x 10 reps\n- Lateral Raises: 3 sets x 12 reps","url":null,"imagePath":null,"categories":["personal","fitness","health"]},{"id":"e7f6a7c1-2b3d-4e5f-8a9b-0c1d2e3f4a5b","header":"Java Design Patterns","creationDate":"2025-03-20T10:30:00","lastModifiedDate":"2025-03-22T17:55:19.753550","textContent":"Key design patterns to remember:\n\n1. Singleton: Ensures a class has only one instance and provides a global point of access to it.\n2. Factory: Creates objects without exposing the instantiation logic.\n3. Observer: Defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified.\n4. MVC: Separates an application into three main components: Model, View, and Controller.\n5. DAO: Data Access Object pattern isolates the application/business layer from the persistence layer.","url":"https://www.tutorialspoint.com/design_pattern/","imagePath":null,"categories":["programming","java","coursework"]},{"id":"a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d","header":"Web Application Structure","creationDate":"2025-03-21T09:15:00","lastModifiedDate":"2025-03-22T17:55:19.753587","textContent":"Remember the key components of Jakarta EE web applications:\n\n- Servlets: Handle HTTP requests and responses\n- JSP: Java Server Pages for dynamic content generation\n- Filters: Process requests/responses before/after servlets\n- Listeners: React to events in the application lifecycle\n- Web.xml: Configuration file for the web application","url":null,"imagePath":"/images/webapp-structure.png","categories":["web","java","jakarta"]},{"id":"f6a7b8c9-d0e1-2f3a-4b5c-6d7e8f9a0b1","header":"Recipe: Pasta Carbonara","creationDate":"2025-02-25T19:20:00","lastModifiedDate":"2025-03-22T17:55:19.754498","textContent":"Ingredients:\r\n- 400g spaghetti\r\n- 200g pancetta or guanciale\r\n- 4 large eggs\r\n- 50g pecorino romano\r\n- 50g parmesan\r\n- Freshly ground black pepper\r\n\r\nInstructions:\r\n1. Cook pasta in salted water until al dente\r\n2. Fry pancetta until crispy\r\n3. Beat eggs with grated cheese and pepper\r\n4. Drain pasta, mix with pancetta and egg mixture\r\n5. Serve immediately with extra cheese\r\n\r\nEat!","url":"","imagePath":"","categories":["recipes","food","personal"]},{"id":"d4e5f6a7-b8c9-0d1e-2f3a-4b5c6d7e8f9","header":"Upcoming Assignments","creationDate":"2025-03-10T08:45:00","lastModifiedDate":"2025-03-22T17:55:19.753663","textContent":"- COMP0004 Java Web App: Due 17th March 2025\n- COMP0005 Database Theory: Due 24th March 2025\n- COMP0008 Algorithms: Due 1st April 2025","url":null,"imagePath":null,"categories":["university","deadlines","important"]},{"id":"b8c9d0e1-f2a3-4b5c-6d7e-8f9a0b1c2d3","header":"Git Commands Cheatsheet","creationDate":"2025-02-15T11:05:00","lastModifiedDate":"2025-03-22T17:55:19.753706","textContent":"Basic Git Commands:\n\n- git init: Initialize a repository\n- git clone [url]: Clone a repository\n- git add [file]: Add file to staging\n- git commit -m \"message\": Commit changes\n- git push: Push to remote\n- git pull: Pull from remote\n- git branch: List branches\n- git checkout [branch]: Switch branches\n- git merge [branch]: Merge branches\n- git status: Check status","url":"https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf","imagePath":null,"categories":["programming","git","reference"]},{"id":"c9d0e1f2-a3b4-5c6d-7e8f-9a0b1c2d3e4","header":"London Concert Events","creationDate":"2025-02-10T20:15:00","lastModifiedDate":"2025-03-22T17:55:19.753742","textContent":"Upcoming concerts to check out:\n\n- 28 March: Royal Philharmonic Orchestra at Royal Albert Hall\n- 2 April: Jazz Ensemble at Ronnie Scott's\n- 10 April: Camden Live Music Festival\n- 15 April: Classical Recital at Barbican Centre\n- 22 April: Contemporary Music at Southbank Centre","url":"https://www.timeout.com/london/music","imagePath":"/images/concert-hall.jpg","categories":["personal","events","music","london"]},{"id":"b2c3d4e5-f6a7-8b9c-0d1e-2f3a4b5c6d7","header":"Shopping List","creationDate":"2025-03-18T18:20:00","lastModifiedDate":"2025-03-22T17:55:19.753776","textContent":"- Milk\n- Bread\n- Eggs\n- Pasta\n- Tomatoes\n- Coffee\n- Sugar\n- Butter","url":null,"imagePath":null,"categories":["personal","shopping"]},{"id":"a7b8c9d0-e1f2-3a4b-5c6d-7e8f9a0b1c2","header":"JavaScript Frameworks Comparison","creationDate":"2025-02-20T15:10:00","lastModifiedDate":"2025-03-22T17:55:19.753807","textContent":"React:\n- Component-based architecture\n- Virtual DOM for performance\n- Large ecosystem and community\n- Maintained by Facebook\n\nAngular:\n- Complete MVC framework\n- TypeScript integration\n- Dependency injection\n- Maintained by Google\n\nVue:\n- Progressive framework\n- Easy learning curve\n- Flexible and lightweight\n- Growing community","url":"https://www.sitepoint.com/javascript-framework-comparison/","imagePath":null,"categories":["programming","web","javascript"]},{"id":"e5f6a7b8-c9d0-1e2f-3a4b-5c6d7e8f9a0","header":"MVC Pattern Implementation","creationDate":"2025-03-05T14:30:00","lastModifiedDate":"2025-03-22T17:55:19.753940","textContent":"The Model-View-Controller (MVC) pattern separates an application into three main components:\n\n1. Model: Represents the data and business logic. Contains only the pure application data, it contains no logic describing how to present the data to a user.\n\n2. View: Represents the visualization of the data that model contains. It's what the user sees.\n\n3. Controller: Acts on both model and view. It controls the data flow into model object and updates the view whenever data changes. It keeps view and model separate.","url":"https://www.tutorialspoint.com/design_pattern/mvc_pattern.htm","imagePath":"/images/mvc-diagram.png","categories":["programming","design","architecture"]},{"id":"d0e1f2a3-b4c5-6d7e-8f9a-0b1c2d3e4f5","header":"Database Normalization","creationDate":"2025-02-05T13:40:00","lastModifiedDate":"2025-03-22T18:04:02.720567","textContent":"Database normalization forms:\r\n\r\n1NF: Eliminate duplicative columns, create separate tables for related data, identify each row with a unique column (primary key).\r\n\r\n2NF: Meet all 1NF criteria, create separate tables for sets of values that apply to multiple records, relate these tables with a foreign key.\r\n\r\n3NF: Meet all 2NF criteria, eliminate columns that are not dependent on the primary key.\r\n\r\nBCNF: Meet all 3NF criteria, and every determinant must be a candidate key.\r\n","url":"https://www.geeksforgeeks.org/database-normalization-normal-forms/","imagePath":"","categories":["programming","database","reference","coursework"]},{"id":"c3d4e5f6-a7b8-9c0d-1e2f-3a4b5c6d7e8","header":"London Museums To Visit","creationDate":"2025-03-15T11:30:00","lastModifiedDate":"2025-03-22T17:55:19.754010","textContent":"1. British Museum\n2. Natural History Museum\n3. Science Museum\n4. Victoria and Albert Museum\n5. Tate Modern\n6. National Gallery\n7. Museum of London","url":"https://www.visitlondon.com/things-to-do/sightseeing/london-attraction/museum/top-ten-museums","imagePath":"/images/london-museums.jpg","categories":["personal","london","activities"]},{"id":"97321a70-f6b6-4670-b129-b1204e7be433","header":"The Debugging Paradox","creationDate":"2025-03-22T16:51:26.103903","lastModifiedDate":"2025-03-22T17:55:19.754088","textContent":"The Phantom Bug\r\nWill leaned back in his chair, rubbing his temples as the lines of code blurred on his screen. It was nearly midnight in the UCL library, and the fluorescent lights hummed softly overhead. His machine learning project—an image classifier for his coursework—should have been working. The logic was sound. The dataset was clean. And yet, for the past four hours, the model had refused to train properly, spitting out accuracy rates barely better than chance.\r\n\r\nHe exhaled sharply and cracked his knuckles. Alright, let’s go again.\r\n\r\nFirst, he checked the dataset. He printed out the first few rows—no missing values, no corrupted labels. Fine.\r\n\r\nNext, the model architecture. A standard convolutional neural network. Nothing fancy, just a few layers of conv nets, ReLUs, and pooling. He skimmed through it, line by line. Seemed solid.\r\n\r\nThen, he ran a sanity test—feeding in a batch of identical images. If everything’s working, it should at least predict the same class every time… It didn’t.\r\n\r\nWill frowned. He opened a new terminal window and ran the script with a debugger, stepping through it one function at a time. The numbers poured in, line after line of matrix transformations. Everything seemed normal—until he noticed something odd in the loss function.\r\n\r\nHis eyebrows knitted together. He had defined a cross-entropy loss, but… wait. The output tensor’s shape was wrong. Instead of a vector of class probabilities, it was a raw logits tensor.\r\n\r\n“Damn it,” he muttered under his breath.\r\n\r\nA single line was missing:\r\noutputs = torch.softmax(outputs, dim=1)\r\n\r\nWithout that, the model was feeding raw scores into the loss function instead of probabilities. The loss calculations had been completely off the entire time.\r\n\r\nWill fixed the line, re-ran the script, and watched as the accuracy climbed steadily with each epoch. 78%, then 85%, then 92%.\r\n\r\nHe exhaled, leaning back with a tired grin. The phantom bug had been exorcised.\r\n\r\nClosing his laptop, he grabbed his bag. Another night, another victory in the never-ending war against bad code.","url":"","imagePath":"","categories":["Stories"]},{"id":"717be001-cdac-4412-84c1-c76e986e4b9b","header":"The Whispering Forest","creationDate":"2025-03-22T16:49:40.842812","lastModifiedDate":"2025-03-22T17:55:19.754386","textContent":"The Whispering Forest\r\n\r\nThe village of Elderbrook lay nestled between rolling green hills, where cobbled streets wound around centuries-old cottages. Life there was peaceful, but it was also predictable—except for the mysterious stretch of woodland to the north. The locals called it the Whispering Forest.\r\n\r\nLegends had swirled around the forest for generations. Some claimed it was enchanted, others believed it cursed. The trees whispered, they said, not with the rustle of the wind, but with voices—words that would call out in the dead of night, luring the curious and the foolish into the depths, never to return.\r\n\r\nArlen had lived in Elderbrook all his life, a young man of sharp wit and restless spirit. The tales of the Whispering Forest had always intrigued him, even as a child. While others would shudder at the thought of stepping past its borders, he felt an unexplainable pull, as if the trees were beckoning him personally. And so, on the eve of his twenty-first birthday, he made a decision. He would uncover the truth.\r\n\r\nSlipping away under the cover of darkness, Arlen made his way to the forest’s edge. The moment his foot crossed into the treeline, the whispers began. At first, they were faint murmurs, rising and falling like the tides. Then, they grew clearer.\r\n\r\n\"Welcome back, Arlen,\" a voice whispered through the leaves.\r\n\r\nHis breath caught in his throat. Back? He had never been here before. He shook off the unease and pressed forward. The deeper he went, the stranger things became. The trees twisted unnaturally, their gnarled roots reaching out like skeletal fingers. The air was thick with the scent of moss and something faintly sweet, like honey and decay intertwined.\r\n\r\nThen, he saw it—a clearing bathed in moonlight. At its center stood a colossal oak tree, its bark silver, its leaves shimmering like stars. Beneath it lay a stone altar, covered in ivy and ancient carvings. And then, a figure stepped forward from the shadows.\r\n\r\nShe was unlike anything he had ever seen. Cloaked in flowing emerald robes, her hair cascaded in waves of twilight. Her eyes, pools of silver, fixed upon him with a knowing gaze.\r\n\r\n\"You have come at last,\" she said. \"I have waited for you.\"\r\n\r\nArlen found his voice. \"Who are you?\"\r\n\r\nShe smiled. \"I am Elyria, guardian of the forest. And you, Arlen, were never meant to be just a villager of Elderbrook. You were born of this place. Your mother once walked these woods, and your father was no ordinary man.\"\r\n\r\nA chill ran through him. He had never known his parents—they had vanished when he was an infant, leaving him to be raised by the village.\r\n\r\n\"What happened to them?\" he asked.\r\n\r\nElyria’s gaze softened. \"They sought to protect you. The power that runs through your veins is ancient. Your mother brought you here as a child, hoping to shield you from those who would seek to use you for their own ends. But the forest remembers its own.\"\r\n\r\nThe whispers grew louder now, swirling around him, chanting his name, telling stories of a forgotten lineage, of magic bound by time itself.\r\n\r\nArlen staggered back. \"I don’t understand. What am I?\"\r\n\r\nElyria stepped closer, placing a hand on his shoulder. \"You are the heir to the Whispering Forest, the last of the line of keepers. And now, the choice is yours. Return to Elderbrook and live as you always have… or embrace your destiny.\"\r\n\r\nThe weight of the decision pressed upon him. To leave behind the only life he had ever known? Or to step into a world of mystery and power, one that had been waiting for him since birth?\r\n\r\nArlen looked at the silver leaves above, listening to the whispers that no longer frightened him but felt like home. And in that moment, he knew.\r\n\r\nHe had never truly belonged in Elderbrook.\r\n\r\nWith steady resolve, he turned to Elyria and spoke the words that would change his fate forever.\r\n\r\n\"Show me the way.\"","url":"","imagePath":"/data/forest.jpeg","categories":["Stories"]}]